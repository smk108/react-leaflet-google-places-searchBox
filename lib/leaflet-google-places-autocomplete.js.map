{"version":3,"sources":["../src/leaflet-google-places-autocomplete.js"],"names":["L","window","GPlaceAutocomplete","Control","extend","options","position","prepend","collapsed_mode","autocomplete_options","collapsedModeIsExpanded","autocomplete","icon","searchBox","_ready","_GAPIPromise","initialize","Util","setOptions","callback","onLocationComplete","google","maps","Map","Promise","resolve","reject","checkCounter","intervalId","setInterval","clearInterval","Error","_buildContainer","then","container","DomUtil","create","searchWrapper","searchIcon","innerHTML","menuUnfold","places","SearchBox","DomEvent","on","_showSearchBar","appendChild","addClass","clickIcon","_toggleSearch","_hideSearchBar","shouldDisplaySearch","removeClass","focus","place","map","geometry","alert","panTo","location","lat","lng","onAdd","addListener","stop","disableClickPropagation","_map","addTo","_container","pos","corner","_controlCorners","insertBefore","firstChild","self","getPlaces","length"],"mappings":"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","file":"leaflet-google-places-autocomplete.js","sourcesContent":["(function() {\r\n  const L = window.L;\r\n  L.GPlaceAutocomplete = {};\r\n\r\n  L.Control.GPlaceAutocomplete = L.Control.extend({\r\n    options: {\r\n      position: 'topleft',\r\n      prepend: true,\r\n      collapsed_mode: false,\r\n      autocomplete_options: {}\r\n    },\r\n\r\n    collapsedModeIsExpanded: true,\r\n\r\n    autocomplete: null,\r\n    icon: null,\r\n    searchBox: null,\r\n\r\n\r\n    _ready: null,\r\n    _GAPIPromise: null,\r\n\r\n    initialize(options) {\r\n      if (options) {\r\n        L.Util.setOptions(this, options);\r\n      }\r\n      if (!this.options.callback) {\r\n        this.options.callback = this.onLocationComplete;\r\n      }\r\n\r\n\r\n      this._ready = !!window.google && !!window.google.maps && !!window.google.maps.Map;\r\n      this._GAPIPromise = this._ready ? Promise.resolve(window.google) : new Promise(((resolve, reject) => {\r\n        let checkCounter = 0;\r\n        let intervalId = null;\r\n        intervalId = setInterval(() => {\r\n          if (checkCounter >= 10) {\r\n            clearInterval(intervalId);\r\n            return reject(new Error('window.google not found after 10 attempts'));\r\n          }\r\n          if (!!window.google && !!window.google.maps && !!window.google.maps.Map) {\r\n            clearInterval(intervalId);\r\n            return resolve(window.google);\r\n          }\r\n          checkCounter++;\r\n        }, 500);\r\n      }));\r\n\r\n\r\n      this._buildContainer();\r\n    },\r\n\r\n    _buildContainer() {\r\n      this._GAPIPromise.then(() => {\r\n        this._ready = true;\r\n\r\n        // build structure\r\n        this.container = L.DomUtil.create('div', 'leaflet-gac-container leaflet-bar');\r\n        const searchWrapper = L.DomUtil.create('div', 'leaflet-gac-wrapper');\r\n        this.searchBox = L.DomUtil.create('input', 'leaflet-gac-control');\r\n        this.searchIcon = L.DomUtil.create('div', 'leaflet-search-icon');\r\n        this.searchIcon.innerHTML = `<img class=\"icon-unfold\" alt=\"menu\" src=${this.options.menuUnfold}>`;\r\n        /*  this.autocomplete = new google.maps.places.Autocomplete(this.searchBox, this.options.autocomplete_options);*/\r\n        // eslint-disable-next-line new-cap\r\n        this.autocomplete = new window.google.maps.places.SearchBox(this.searchBox);\r\n        // if collapse mode set - create icon and register events\r\n        if (this.options.collapsed_mode) {\r\n          this.collapsedModeIsExpanded = false;\r\n\r\n          this.icon = L.DomUtil.create('div', 'leaflet-gac-search-btn');\r\n          L.DomEvent\r\n            .on(this.icon, 'click', this._showSearchBar, this);\r\n\r\n          this.icon.appendChild(\r\n            L.DomUtil.create('div', 'leaflet-gac-search-icon')\r\n          );\r\n\r\n          searchWrapper.appendChild(\r\n            this.icon\r\n          );\r\n          L.DomUtil.addClass(this.searchBox, 'leaflet-gac-hidden');\r\n        }\r\n\r\n        if (this.options.clickIcon) {\r\n          searchWrapper.appendChild(\r\n            this.searchIcon\r\n          );\r\n        }\r\n        searchWrapper.appendChild(\r\n          this.searchBox\r\n        );\r\n        // create and bind autocomplete\r\n        this.container.appendChild(\r\n          searchWrapper\r\n        );\r\n      });\r\n    },\r\n\r\n    //* **\r\n    // Collapse mode callbacks\r\n    //* **\r\n\r\n    _showSearchBar() {\r\n      this._toggleSearch(true);\r\n    },\r\n\r\n    _hideSearchBar() {\r\n      // if element is expanded, we need to change expanded flag and call collapse handler\r\n      if (this.collapsedModeIsExpanded) {\r\n        this._toggleSearch(false);\r\n      }\r\n    },\r\n\r\n    _toggleSearch(shouldDisplaySearch) {\r\n      if (shouldDisplaySearch) {\r\n        L.DomUtil.removeClass(this.searchBox, 'leaflet-gac-hidden');\r\n        L.DomUtil.addClass(this.icon, 'leaflet-gac-hidden');\r\n        this.searchBox.focus();\r\n      } else {\r\n        L.DomUtil.addClass(this.searchBox, 'leaflet-gac-hidden');\r\n        L.DomUtil.removeClass(this.icon, 'leaflet-gac-hidden');\r\n      }\r\n      this.collapsedModeIsExpanded = shouldDisplaySearch;\r\n    },\r\n\r\n    //* **\r\n    // Default success callback\r\n    //* **\r\n\r\n    onLocationComplete(place, map) {\r\n      // default callback\r\n      if (!place.geometry) {\r\n        // eslint-disable-next-line no-alert\r\n        alert('Location not found');\r\n        return;\r\n      }\r\n      map.panTo([\r\n        place.geometry.location.lat(),\r\n        place.geometry.location.lng()\r\n      ]);\r\n    },\r\n\r\n    onAdd() {\r\n      // stop propagation of click events\r\n      L.DomEvent.addListener(this.container, 'click', L.DomEvent.stop);\r\n      if (this.options.clickIcon) {\r\n        L.DomEvent.addListener(this.searchIcon, 'click', this.options.clickIcon);\r\n      }\r\n      L.DomEvent.disableClickPropagation(this.container);\r\n      if (this.options.collapsed_mode) {\r\n        // if collapse mode - register handler\r\n        this._map.on('dragstart click', this._hideSearchBar, this);\r\n      }\r\n      return this.container;\r\n    },\r\n\r\n    addTo(map) {\r\n      this._GAPIPromise.then(() => {\r\n        this._ready = true;\r\n        this._map = map;\r\n\r\n        const container = this._container = this.onAdd(map);\r\n\r\n\r\n        const pos = this.options.position;\r\n\r\n\r\n        // eslint-disable-next-line no-underscore-dangle\r\n        const corner = map._controlCorners[pos];\r\n\r\n        L.DomUtil.addClass(container, 'leaflet-control');\r\n        if (this.options.prepend) {\r\n          corner.insertBefore(container, corner.firstChild);\r\n        } else {\r\n          corner.appendChild(container);\r\n        }\r\n\r\n        const callback = this.options.callback;\r\n        const self = this;\r\n        /*  google.maps.event.addListener(this.autocomplete, \"place_changed\", function () {\r\n            callback(_this.autocomplete.getPlace(), map);\r\n          });*/\r\n        this.autocomplete.addListener('places_changed', () => {\r\n          const places = self.autocomplete.getPlaces();\r\n          if (places && places.length) {\r\n            callback(places[0], map);\r\n          }\r\n        });\r\n        return this;\r\n      });\r\n    }\r\n\r\n\r\n  });\r\n}());\r\n"]}