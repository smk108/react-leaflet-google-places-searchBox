{"version":3,"sources":["../src/AutoSearch.js"],"names":["menuUnfold","require","AutoSearch","props","handleClickSearchIcon","updateLocation","handleNoLocation","leafletElement","window","L","Control","GPlaceAutocomplete","clickIcon","callback","place","map","geometry","panTo","location","lat","lng","console","warn","MapControl","propTypes"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;;;;;;;AACA,IAAMA,aAAaC,QAAQ,uBAAR,CAAnB;;IAGqBC,U;;;;;;;;;;;yCAGE;AAAA,mBAC+C,KAAKC,KADpD;AAAA,UACZC,qBADY,UACZA,qBADY;AAAA,UACWC,cADX,UACWA,cADX;AAAA,UAC2BC,gBAD3B,UAC2BA,gBAD3B;;AAEnB,WAAKC,cAAL,GAAsB,IAAIC,OAAOC,CAAP,CAASC,OAAT,CAAiBC,kBAArB,CAAwC;AAC5DC,mBAAWR,qBADiD;AAE5DJ,8BAF4D;AAG5Da,gBAH4D,oBAGnDC,KAHmD,EAG5CC,GAH4C,EAGvC;AACnB,cAAI,CAACD,MAAME,QAAX,EAAqB;AACnB,gBAAIV,gBAAJ,EAAsB;AACpBA,+BAAiBQ,KAAjB;AACD;AACD;AACD;AACDC,cAAIE,KAAJ,CAAU,CACRH,MAAME,QAAN,CAAeE,QAAf,CAAwBC,GAAxB,EADQ,EAERL,MAAME,QAAN,CAAeE,QAAf,CAAwBE,GAAxB,EAFQ,CAAV;AAIA,cAAIf,cAAJ,EAAoB;AAClBgB,oBAAQC,IAAR,CAAa,gBAAb,EAA+BjB,cAA/B;AACAA,2BACES,MAAME,QAAN,CAAeE,QAAf,CAAwBC,GAAxB,EADF,EAEEL,MAAME,QAAN,CAAeE,QAAf,CAAwBE,GAAxB,EAFF;AAID;AACF;AArB2D,OAAxC,CAAtB;AAuBD;;;;EA5BqCG,wB;;AAAnBrB,U,CACZsB,S,GAAY,E;kBADAtB,U","file":"AutoSearch.js","sourcesContent":["import {MapControl} from 'react-leaflet';\r\nimport './leaflet-google-places-autocomplete';\r\nimport './leaflet-gplaces-autocomplete.css';\r\nconst menuUnfold = require('./img/menu_unfold.svg');\r\n\r\n\r\nexport default class AutoSearch extends MapControl {\r\n  static propTypes = {};\r\n\r\n  componentWillMount() {\r\n    const {handleClickSearchIcon, updateLocation, handleNoLocation} = this.props;\r\n    this.leafletElement = new window.L.Control.GPlaceAutocomplete({\r\n      clickIcon: handleClickSearchIcon,\r\n      menuUnfold,\r\n      callback(place, map) {\r\n        if (!place.geometry) {\r\n          if (handleNoLocation) {\r\n            handleNoLocation(place);\r\n          }\r\n          return;\r\n        }\r\n        map.panTo([\r\n          place.geometry.location.lat(),\r\n          place.geometry.location.lng()\r\n        ]);\r\n        if (updateLocation) {\r\n          console.warn('updateLocation', updateLocation);\r\n          updateLocation(\r\n            place.geometry.location.lat(),\r\n            place.geometry.location.lng()\r\n          );\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n"]}